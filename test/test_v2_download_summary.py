# coding: utf-8

"""
    NCBI Datasets API

    ### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ncbi.datasets.openapi.models.v2_download_summary import V2DownloadSummary

class TestV2DownloadSummary(unittest.TestCase):
    """V2DownloadSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2DownloadSummary:
        """Test V2DownloadSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2DownloadSummary`
        """
        model = V2DownloadSummary()
        if include_optional:
            return V2DownloadSummary(
                record_count = 56,
                assembly_count = 56,
                resource_updated_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                hydrated = ncbi.datasets.openapi.models.v2_download_summary_hydrated.v2DownloadSummaryHydrated(
                    estimated_file_size_mb = 56, 
                    url = '', 
                    cli_download_command_line = '', ),
                dehydrated = ncbi.datasets.openapi.models.v2_download_summary_dehydrated.v2DownloadSummaryDehydrated(
                    estimated_file_size_mb = 56, 
                    url = '', 
                    cli_download_command_line = '', 
                    cli_rehydrate_command_line = '', ),
                errors = [
                    ncbi.datasets.openapi.models.v2reports_error.v2reportsError(
                        assembly_error_code = 'UNKNOWN_ASSEMBLY_ERROR_CODE', 
                        gene_error_code = 'UNKNOWN_GENE_ERROR_CODE', 
                        organelle_error_code = 'UNKNOWN_ORGANELLE_ERROR_CODE', 
                        virus_error_code = 'UNKNOWN_VIRUS_ERROR_CODE', 
                        taxonomy_error_code = 'UNKNOWN_TAXONOMY_ERROR_CODE', 
                        reason = '', 
                        message = '', 
                        invalid_identifiers = [
                            ''
                            ], )
                    ],
                messages = [
                    ncbi.datasets.openapi.models.v2reports_message.v2reportsMessage(
                        error = ncbi.datasets.openapi.models.v2reports_error.v2reportsError(
                            assembly_error_code = 'UNKNOWN_ASSEMBLY_ERROR_CODE', 
                            gene_error_code = 'UNKNOWN_GENE_ERROR_CODE', 
                            organelle_error_code = 'UNKNOWN_ORGANELLE_ERROR_CODE', 
                            virus_error_code = 'UNKNOWN_VIRUS_ERROR_CODE', 
                            taxonomy_error_code = 'UNKNOWN_TAXONOMY_ERROR_CODE', 
                            reason = '', 
                            message = '', 
                            invalid_identifiers = [
                                ''
                                ], ), 
                        warning = ncbi.datasets.openapi.models.v2reports_warning.v2reportsWarning(
                            gene_warning_code = 'UNKNOWN_GENE_WARNING_CODE', 
                            reason = '', 
                            message = '', 
                            replaced_id = ncbi.datasets.openapi.models.v2reports_warning_replaced_id.v2reportsWarningReplacedId(
                                requested = '', 
                                returned = '', ), 
                            unrecognized_identifier = '', ), )
                    ],
                available_files = ncbi.datasets.openapi.models.v2_download_summary_available_files.v2DownloadSummaryAvailableFiles(
                    all_genomic_fasta = ncbi.datasets.openapi.models.v2_download_summary_file_summary.v2DownloadSummaryFileSummary(
                        file_count = 56, 
                        size_mb = 1.337, ), 
                    genome_gff = ncbi.datasets.openapi.models.v2_download_summary_file_summary.v2DownloadSummaryFileSummary(
                        file_count = 56, 
                        size_mb = 1.337, ), 
                    genome_gbff = , 
                    rna_fasta = , 
                    prot_fasta = , 
                    genome_gtf = , 
                    cds_fasta = , 
                    sequence_report = , 
                    annotation_report = , )
            )
        else:
            return V2DownloadSummary(
        )
        """

    def testV2DownloadSummary(self):
        """Test V2DownloadSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

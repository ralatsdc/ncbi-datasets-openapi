# coding: utf-8

"""
    NCBI Datasets API

    ### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ncbi.datasets.openapi.models.v2reports_taxonomy_names_data_report_page import V2reportsTaxonomyNamesDataReportPage

class TestV2reportsTaxonomyNamesDataReportPage(unittest.TestCase):
    """V2reportsTaxonomyNamesDataReportPage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2reportsTaxonomyNamesDataReportPage:
        """Test V2reportsTaxonomyNamesDataReportPage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2reportsTaxonomyNamesDataReportPage`
        """
        model = V2reportsTaxonomyNamesDataReportPage()
        if include_optional:
            return V2reportsTaxonomyNamesDataReportPage(
                reports = [
                    ncbi.datasets.openapi.models.v2reports_taxonomy_names_report_match.v2reportsTaxonomyNamesReportMatch(
                        taxonomy = ncbi.datasets.openapi.models.v2reports_taxonomy_names_descriptor.v2reportsTaxonomyNamesDescriptor(
                            tax_id = '', 
                            rank = 'NO_RANK', 
                            current_scientific_name = ncbi.datasets.openapi.models.v2reports_name_and_authority.v2reportsNameAndAuthority(
                                name = '', 
                                authority = '', 
                                type_strains = [
                                    ncbi.datasets.openapi.models.v2reports_taxonomy_type_material.v2reportsTaxonomyTypeMaterial(
                                        type_strain_name = '', 
                                        type_strain_id = '', 
                                        bio_collection_id = '', 
                                        bio_collection_name = '', 
                                        collection_type = [
                                            'no_collection_type'
                                            ], 
                                        type_class = '', )
                                    ], 
                                curator_synonym = '', 
                                homotypic_synonyms = [
                                    ncbi.datasets.openapi.models.v2reports_name_and_authority.v2reportsNameAndAuthority(
                                        name = '', 
                                        authority = '', 
                                        curator_synonym = '', 
                                        heterotypic_synonyms = [
                                            
                                            ], 
                                        other_synonyms = [
                                            
                                            ], 
                                        informal_names = [
                                            ''
                                            ], 
                                        basionym = , 
                                        publications = [
                                            ncbi.datasets.openapi.models.v2reports_name_and_authority_publication.v2reportsNameAndAuthorityPublication(
                                                name = '', 
                                                citation = '', )
                                            ], 
                                        notes = [
                                            ncbi.datasets.openapi.models.v2reports_name_and_authority_note.v2reportsNameAndAuthorityNote(
                                                name = '', 
                                                note = '', 
                                                note_classifier = 'no_authority_classifier', )
                                            ], 
                                        formal = True, )
                                    ], 
                                heterotypic_synonyms = [
                                    
                                    ], 
                                other_synonyms = [
                                    
                                    ], 
                                informal_names = [
                                    ''
                                    ], 
                                basionym = , 
                                publications = [
                                    ncbi.datasets.openapi.models.v2reports_name_and_authority_publication.v2reportsNameAndAuthorityPublication(
                                        name = '', 
                                        citation = '', )
                                    ], 
                                notes = [
                                    ncbi.datasets.openapi.models.v2reports_name_and_authority_note.v2reportsNameAndAuthorityNote(
                                        name = '', 
                                        note = '', )
                                    ], 
                                formal = True, ), 
                            group_name = '', 
                            curator_common_name = '', 
                            other_common_names = [
                                ''
                                ], 
                            general_notes = [
                                ''
                                ], 
                            links_from_type = '', 
                            citations = [
                                ncbi.datasets.openapi.models.v2reports_taxonomy_names_descriptor_citation.v2reportsTaxonomyNamesDescriptorCitation(
                                    full_citation = '', 
                                    short_citation = '', 
                                    pmid = '', )
                                ], 
                            current_scientific_name_is_formal = True, ), 
                        query = [
                            ''
                            ], 
                        warning = ncbi.datasets.openapi.models.v2reports_warning.v2reportsWarning(
                            gene_warning_code = 'UNKNOWN_GENE_WARNING_CODE', 
                            reason = '', 
                            message = '', 
                            replaced_id = ncbi.datasets.openapi.models.v2reports_warning_replaced_id.v2reportsWarningReplacedId(
                                requested = '', 
                                returned = '', ), 
                            unrecognized_identifier = '', ), 
                        errors = [
                            ncbi.datasets.openapi.models.v2reports_error.v2reportsError(
                                assembly_error_code = 'UNKNOWN_ASSEMBLY_ERROR_CODE', 
                                gene_error_code = 'UNKNOWN_GENE_ERROR_CODE', 
                                organelle_error_code = 'UNKNOWN_ORGANELLE_ERROR_CODE', 
                                virus_error_code = 'UNKNOWN_VIRUS_ERROR_CODE', 
                                taxonomy_error_code = 'UNKNOWN_TAXONOMY_ERROR_CODE', 
                                reason = '', 
                                message = '', 
                                invalid_identifiers = [
                                    ''
                                    ], )
                            ], )
                    ],
                messages = [
                    ncbi.datasets.openapi.models.v2reports_message.v2reportsMessage(
                        error = ncbi.datasets.openapi.models.v2reports_error.v2reportsError(
                            assembly_error_code = 'UNKNOWN_ASSEMBLY_ERROR_CODE', 
                            gene_error_code = 'UNKNOWN_GENE_ERROR_CODE', 
                            organelle_error_code = 'UNKNOWN_ORGANELLE_ERROR_CODE', 
                            virus_error_code = 'UNKNOWN_VIRUS_ERROR_CODE', 
                            taxonomy_error_code = 'UNKNOWN_TAXONOMY_ERROR_CODE', 
                            reason = '', 
                            message = '', 
                            invalid_identifiers = [
                                ''
                                ], ), 
                        warning = ncbi.datasets.openapi.models.v2reports_warning.v2reportsWarning(
                            gene_warning_code = 'UNKNOWN_GENE_WARNING_CODE', 
                            reason = '', 
                            message = '', 
                            replaced_id = ncbi.datasets.openapi.models.v2reports_warning_replaced_id.v2reportsWarningReplacedId(
                                requested = '', 
                                returned = '', ), 
                            unrecognized_identifier = '', ), )
                    ],
                total_count = 56,
                next_page_token = ''
            )
        else:
            return V2reportsTaxonomyNamesDataReportPage(
        )
        """

    def testV2reportsTaxonomyNamesDataReportPage(self):
        """Test V2reportsTaxonomyNamesDataReportPage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

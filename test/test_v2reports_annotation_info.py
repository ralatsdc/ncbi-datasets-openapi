# coding: utf-8

"""
    NCBI Datasets API

    ### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ncbi.datasets.openapi.models.v2reports_annotation_info import V2reportsAnnotationInfo

class TestV2reportsAnnotationInfo(unittest.TestCase):
    """V2reportsAnnotationInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2reportsAnnotationInfo:
        """Test V2reportsAnnotationInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2reportsAnnotationInfo`
        """
        model = V2reportsAnnotationInfo()
        if include_optional:
            return V2reportsAnnotationInfo(
                name = '',
                provider = '',
                release_date = '',
                report_url = '',
                stats = ncbi.datasets.openapi.models.v2reports_feature_counts.v2reportsFeatureCounts(
                    gene_counts = ncbi.datasets.openapi.models.v2reports_gene_counts.v2reportsGeneCounts(
                        total = 56, 
                        protein_coding = 56, 
                        non_coding = 56, 
                        pseudogene = 56, 
                        other = 56, ), ),
                busco = ncbi.datasets.openapi.models.v2reports_busco_stat.v2reportsBuscoStat(
                    busco_lineage = '', 
                    busco_ver = '', 
                    complete = 1.337, 
                    single_copy = 1.337, 
                    duplicated = 1.337, 
                    fragmented = 1.337, 
                    missing = 1.337, 
                    total_count = '', ),
                method = '',
                pipeline = '',
                software_version = '',
                status = '',
                release_version = ''
            )
        else:
            return V2reportsAnnotationInfo(
        )
        """

    def testV2reportsAnnotationInfo(self):
        """Test V2reportsAnnotationInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

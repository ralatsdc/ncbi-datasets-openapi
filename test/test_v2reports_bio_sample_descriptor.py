# coding: utf-8

"""
    NCBI Datasets API

    ### NCBI Datasets is a resource that lets you easily gather data from NCBI. The Datasets version 2 API is still in alpha, and we're updating it often to add new functionality, iron out bugs and enhance usability. For some larger downloads, you may want to download a [dehydrated zip archive](https://www.ncbi.nlm.nih.gov/datasets/docs/v2/how-tos/genomes/large-download/), and retrieve the individual data files at a later time. 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ncbi.datasets.openapi.models.v2reports_bio_sample_descriptor import V2reportsBioSampleDescriptor

class TestV2reportsBioSampleDescriptor(unittest.TestCase):
    """V2reportsBioSampleDescriptor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2reportsBioSampleDescriptor:
        """Test V2reportsBioSampleDescriptor
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2reportsBioSampleDescriptor`
        """
        model = V2reportsBioSampleDescriptor()
        if include_optional:
            return V2reportsBioSampleDescriptor(
                accession = '',
                last_updated = '',
                publication_date = '',
                submission_date = '',
                sample_ids = [
                    ncbi.datasets.openapi.models.v2reports_bio_sample_id.v2reportsBioSampleId(
                        db = '', 
                        label = '', 
                        value = '', )
                    ],
                description = ncbi.datasets.openapi.models.v2reports_bio_sample_description.v2reportsBioSampleDescription(
                    title = '', 
                    organism = ncbi.datasets.openapi.models.v2reports_organism.v2reportsOrganism(
                        tax_id = 56, 
                        sci_name = '', 
                        organism_name = '', 
                        common_name = '', 
                        lineage = [
                            ncbi.datasets.openapi.models.v2reports_lineage_organism.v2reportsLineageOrganism(
                                tax_id = 56, 
                                name = '', )
                            ], 
                        strain = '', 
                        pangolin_classification = '', 
                        infraspecific_names = ncbi.datasets.openapi.models.v2reports_infraspecific_names.v2reportsInfraspecificNames(
                            breed = '', 
                            cultivar = '', 
                            ecotype = '', 
                            isolate = '', 
                            sex = '', 
                            strain = '', ), ), 
                    comment = '', ),
                owner = ncbi.datasets.openapi.models.v2reports_bio_sample_owner.v2reportsBioSampleOwner(
                    name = '', 
                    contacts = [
                        ncbi.datasets.openapi.models.v2reports_bio_sample_contact.v2reportsBioSampleContact(
                            lab = '', )
                        ], ),
                models = [
                    ''
                    ],
                bioprojects = [
                    ncbi.datasets.openapi.models.v2reports_bio_project.v2reportsBioProject(
                        accession = '', 
                        title = '', 
                        parent_accession = '', 
                        parent_accessions = [
                            ''
                            ], )
                    ],
                package = '',
                attributes = [
                    ncbi.datasets.openapi.models.v2reports_bio_sample_attribute.v2reportsBioSampleAttribute(
                        name = '', 
                        value = '', )
                    ],
                status = ncbi.datasets.openapi.models.v2reports_bio_sample_status.v2reportsBioSampleStatus(
                    when = '', ),
                age = '',
                biomaterial_provider = '',
                breed = '',
                collected_by = '',
                collection_date = '',
                cultivar = '',
                dev_stage = '',
                ecotype = '',
                geo_loc_name = '',
                host = '',
                host_disease = '',
                identified_by = '',
                ifsac_category = '',
                isolate = '',
                isolate_name_alias = '',
                isolation_source = '',
                lat_lon = '',
                project_name = '',
                sample_name = '',
                serovar = '',
                sex = '',
                source_type = '',
                strain = '',
                sub_species = '',
                tissue = '',
                serotype = ''
            )
        else:
            return V2reportsBioSampleDescriptor(
        )
        """

    def testV2reportsBioSampleDescriptor(self):
        """Test V2reportsBioSampleDescriptor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
